define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.EzGroupbyTreeMixin=_exports.$ezGroupbyTreeMixin=void 0;const EzGroupbyTreeMixin=superclass=>class extends superclass{groupBy(data,groups,fullGroupBy,aggFunc=this.aggFunction,pathAggFunc=this.pathAggFunction){if(0==groups.length){return Object.assign({},data)}else{let group=groups[0],r=[],names=[];group.aggField=this.parseAggStr(group.aggregate);group=this.parseGroupByField(group,group.field);for(let i=0;i<data.length;i++){if(!this.IN(names,this.applyModifier(data[i][group.field],group))){names.push(this.applyModifier(data[i][group.field],group))}}names.sort();for(let index=0;index<names.length;index++){let name=names[index],pathArray=[],f=[];for(let i=0;i<data.length;i++){if(this.applyModifier(data[i][group.field],group)==name){pathArray.push(i);f.push(data[i])}}r.push({name:name,chart:group.chart,y:aggFunc(this,f,group,name),drilldown:this.groupBy(f,groups.slice(1,groups.length),fullGroupBy,aggFunc,pathAggFunc),group:group,path:pathAggFunc(this,f,fullGroupBy,group,name),data:f,groups:fullGroupBy,downloadObj:this.downloadFields})}return r}}IN(list,val){if(-1==list.indexOf(val)){return!1}return!0}applyModifier(val,group){if("undefined"==typeof group.modifier){return val}else{switch(!0){case /^date_trunc/.test(group.modifier):var truncType=group.modifierParams[0];switch(!0){case /^day/.test(truncType):try{val=new Date(val).toISOString().slice(0,10)}catch(e){}break;case /^month/.test(truncType):try{val=new Date(val).toISOString().slice(0,7)}catch(e){}break;case /^year/.test(truncType):try{val=new Date(val).toISOString().slice(0,4)}catch(e){}break;default:}break;default:}return val}}parseAggStr(str){let match=str.match(/\((.*)\)/);return match[1]}parseGroupByField(group,str){switch(!0){case /^date_trunc/.test(str):let match=str.match(/\((.*)\)/);if("undefined"!=typeof match&&null!=match){group.modifier="date_trunc";group.modifierParams=match[1].split(/,/);group.field=group.modifierParams[1]}break;default:}return group}aggFunction(me,data,group,name){var _NumberMAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER,_NumberMIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER;if("undefined"!=typeof group.aggregate){var str=group.aggregate;switch(!0){case /^sum/.test(str):for(var aggField=group.aggField,returnNum=0,i=0;i<data.length;i++){if(me.applyModifier(data[i][group.field],group)==name){returnNum=parseInt(data[i][aggField])+returnNum}}break;case /^max/.test(str):for(var aggField=group.aggField,returnNum=_NumberMIN_SAFE_INTEGER,i=0;i<data.length;i++){if(me.applyModifier(data[i][group.field],group)==name&&returnNum<parseInt(data[i][aggField])){returnNum=parseInt(data[i][aggField])}}break;case /^min/.test(str):for(var aggField=group.aggField,returnNum=_NumberMAX_SAFE_INTEGER,i=0;i<data.length;i++){if(me.applyModifier(data[i][group.field],group)==name&&returnNum>parseInt(data[i][aggField])){returnNum=parseInt(data[i][aggField])}}break;case /^count/.test(str):for(var returnNum=0,i=0;i<data.length;i++){if(me.applyModifier(data[i][group.field],group)==name){returnNum++}}break;case /^boxplot/.test(str):for(var aggField=group.aggField,boxplot={max:_NumberMIN_SAFE_INTEGER,min:_NumberMAX_SAFE_INTEGER,median:0,q1:0,q3:0},arrayOfValues=[],i=0;i<data.length;i++){if(me.applyModifier(data[i][group.field],group)==name&&boxplot.min>parseInt(data[i][aggField])){boxplot.min=parseInt(data[i][aggField])}if(me.applyModifier(data[i][group.field],group)==name&&boxplot.max<parseInt(data[i][aggField])){boxplot.max=parseInt(data[i][aggField])}if(me.applyModifier(data[i][group.field],group)==name){arrayOfValues.push(parseInt(data[i][aggField]))}}boxplot.q1=me.Quartile_25(arrayOfValues);boxplot.median=me.Quartile_50(arrayOfValues);boxplot.q3=me.Quartile_75(arrayOfValues);return boxplot;default:console.log("Unknown Aggregate Function "+str);}return returnNum}}Median(data){return this.Quartile_50(data)}Quartile_25(data){return this.Quartile(data,.25)}Quartile_50(data){return this.Quartile(data,.5)}Quartile_75(data){return this.Quartile(data,.75)}Quartile(data,q){data=this.Array_Sort_Numbers(data);var pos=(data.length-1)*q,base=Math.floor(pos);if(data[base+1]!==void 0){return data[base]+(pos-base)*(data[base+1]-data[base])}else{return data[base]}}Array_Sort_Numbers(inputarray){return inputarray.sort(function(a,b){return a-b})}Array_Sum(t){return t.reduce(function(a,b){return a+b},0)}Array_Average(data){return this.Array_Sum(data)/data.length}Array_Stdev(tab){var i,j,total=0,mean=0,diffSqredArr=[];for(i=0;i<tab.length;i+=1){total+=tab[i]}mean=total/tab.length;for(j=0;j<tab.length;j+=1){diffSqredArr.push(Math.pow(tab[j]-mean,2))}return Math.sqrt(diffSqredArr.reduce(function(firstEl,nextEl){return firstEl+nextEl})/tab.length)}pathAggFunction(me,data,groups,group){for(var path="",i=0;i<groups.length;i++){if(groups[i].field!=group.field){path+=me.applyModifier(data[0][groups[i].field],groups[i])+" > "}else{path+=me.applyModifier(data[0][groups[i].field],groups[i]);break}}return path}downloadDataToCsv(series,downloadObj,data){var me=this,exportStr="";exportStr+=me.title;exportStr+="\n\n";if("undefined"!=typeof series.path){exportStr+="Local Filter:\n";series.path=series.path.replace(/,/g," ");if(0<parseInt(series.path)){exportStr+="=\""+series.path+"\""+","}else{exportStr+="\""+series.path+"\""+","}exportStr+="\n\n\n"}for(var item in downloadObj){exportStr+="\""+downloadObj[item]+"\""+","}exportStr+="\n";for(var k=0;k<data.length;k++){for(var i=0;i<downloadObj.length;i++){exportStr+="\""+data[k][downloadObj[i]]+"\""+","}exportStr+="\n"}me.export(exportStr,"ez_download.csv","text/csv;charset=utf-8;")}export(exportStr,filename,fileType){var blob=new Blob([exportStr],{type:fileType});if(navigator.msSaveBlob){navigator.msSaveBlob(blob,filename)}else{var link=document.createElement("a");if(link.download!==void 0){var url=URL.createObjectURL(blob);link.setAttribute("href",url);link.setAttribute("download",filename);link.style.visibility="hidden";document.body.appendChild(link);link.click();document.body.removeChild(link)}}}};_exports.EzGroupbyTreeMixin=EzGroupbyTreeMixin;_exports.$ezGroupbyTreeMixin={EzGroupbyTreeMixin:EzGroupbyTreeMixin}});